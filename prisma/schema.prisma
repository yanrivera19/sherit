// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Theme {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  creator   User     @relation(fields: [creatorId], references: [id])
  creatorId Int
	subscribedUsers ThemeSubscriptions[]
	posts Post[]

	@@index(fields: [id], type: Hash)
}

model ThemeSubscriptions {
	theme Theme @relation(fields: [themeId], references: [id])
	themeId Int
	user User @relation(fields: [userId], references: [id])
	userId Int
	assignedAt DateTime @default(now())
  assignedBy String

  @@id([themeId, userId])
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  published Boolean  @default(false) //to make drafts. If false, we will display post in list of drafts
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
	comments Comment[]
	theme Theme @relation(fields: [themeId], references: [id])
	themeId Int

	@@index(fields: [id], type: Hash)
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  username  String   @unique
  posts      Post[]
	comments Comment[]
	createdThemes Theme[]
  subscribedThemes     ThemeSubscriptions[]

	@@index(fields: [id], type: Hash)
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
	author    User     @relation(fields: [authorId], references: [id])
  authorId  Int 
	parentComment Comment? @relation("ParentChildComments", fields: [parentCommentId], references: [id])
	parentCommentId Int?  @unique
	childComments Comment[] @relation("ParentChildComments")
	post Post @relation(fields: [postId], references: [id])
	postId Int

	@@index(fields: [id], type: Hash)
}
